"""
Django settings for {{ jc_project_title }} project.

Generated by 'django-admin startproject' using Django 2.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
from django.contrib.messages import constants as messages
from django.utils.translation import gettext_lazy
import sentry_sdk
from sentry_sdk.integrations.django import DjangoIntegration
from .base_settings import *

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '{{ jc_secretkey }}'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = {{ jc_settings_debug }}

ALLOWED_HOSTS = [{{ jc_domain_names | map('to_json') | join(', ') }}]

if DEBUG:
    INSTALLED_APPS += [
        'debug_toolbar',
        ]

    MIDDLEWARE += [
        'debug_toolbar.middleware.DebugToolbarMiddleware',
    ]

WSGI_APPLICATION = '{{ jc_project_title }}.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases


DATABASES = {
{% if jc_db_type == "mariadb" %}
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': '{{ mysql_db_jc_name }}',
        'USER': '{{ mysql_user_jc_name }}',
        'PASSWORD': '{{ mysql_user_jc_password }}',
        'HOST': '{{ mysql_user_jc_host }}',
        'PORT': '',
    }
{% else %}
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
{% endif %}
}

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]

LOCALE_PATHS = [
    os.path.join(BASE_DIR, 'locale'),
]

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

LOGIN_URL = '/account/login/'
LOGIN_REDIRECT_URL = '/admin_portal/'
LOGOUT_REDIRECT_URL = '/'

CACHES = {
    'default': {
        # 'BACKEND': 'django.core.cache.backends.dummy.DummyCache',
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'unique-snowflake-jesus_commandments-1',
    }
}

# Monitoring application
if not DEBUG:
    sentry_sdk.init(
        dsn="https://3caa949e65db4d419d486668fe5180a4@sentry.io/1527507",
        integrations=[DjangoIntegration()]
    )

# Debug toolbar settings
INTERNAL_IPS = [
    '127.0.0.1',
    {% if not jc_production %}
    # Allow Debug toolbar for the developers
    {{ jc_developer_ips | map('to_json') | join(', ') }}
    {% endif %}
]

SECURE_BROWSER_XSS_FILTER = True
SECURE_CONTENT_TYPE_NOSNIFF = True
#SECURE_SSL_REDIRECT = True
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True
SECURE_HSTS_SECONDS = 86400  # 1 day
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_HSTS_PRELOAD = True

BIBLE_API_KEY = '{{ jc_bible_api_key }}'  # The API key to scripture.api.bible
HSV_BIBLE_KEY = '{{ jc_hsv_bible_key }}'  # The key for the HSV bible
HSV_BIBLE_PATH = r'{{ jc_hsv_bible_path }}'  # The path to the HSV bible texts (encrypted zip file)