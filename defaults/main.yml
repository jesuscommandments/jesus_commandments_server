---
####################
# Project settings #
####################

# App version (can be manually chosen. If a new one is set, a new directory will be created. Backup can be restored by repoint the symlink)
jc_app_version: 'version_1.0'
# When a new version is installed, the database is copied over from the current version. In some circumestances you want to force this.
jc_force_copy_database: false

# Puth this value to true if the site is running production on this group of hosts
jc_production: true

# Will install all requirements
jc_install_requirements: false
# Will update the current database structure
jc_update_database: false
# Will import a statix CSV file. First time use only! 
jc_fill_database: false
# Update translation files
jc_update_translation_files: false
# Auto translate all files
jc_auto_translate_files: false
# Clean Thumbnail Cache
jc_clean_thumbnail_cache: false

# General settings
jc_config_file: '{{ jc_project_path }}/{{ jc_project_title }}/settings.py'
jc_project_name: 'jesuscommandments'
jc_project_config_name: 'jesuscommandments'
jc_project_title: 'jesus_commandments_website'
jc_projects_directory: '/var/www'
jc_project_path: '{{ jc_projects_directory }}/{{ jc_project_name }}/current/{{ jc_project_title }}'
jc_python_env: '{{ jc_git_project_path }}/{{ jc_project_title }}/venv'

#Settings.py
jc_settings_debug: False

################
# Git settings #
################
# Will force a git clone, even if there is no up-to-date and clean local repository
jc_git_force: no
# Will clone the configured origin repository to the {{ jc_git_project_path }}
jc_git_clone: yes
# Will update the current git repository to the {{ jc_git_project_path }}
jc_git_update: yes
# Warning! ssh key can be required
jc_git_repository: 'git@github.com:jesuscommandments/jesus_commandments.git'
jc_git_user: jesuscommandments
jc_git_project_path: '{{ jc_projects_directory }}/{{ jc_project_name }}/{{ jc_app_version }}/{{ jc_project_title }}'

##################
# Nginx settings #
##################

jc_nginx_main_template: nginx.conf.j2
jc_nginx_app_template: app-nginx.conf.j2

jc_app_user: www-data
jc_app_group: www-data

# Define your list of domain names here
jc_domain_names: []

# How long nginx should serve static files (By Example '1d' or 'max')
jc_nginx_cache_static_files: 1d
jc_nginx_max_fileupload_size: '40M'
jc_nginx_keepalive_timeout: 180

##################
# uWSGI settings #
##################

jc_uwsgi_app_template: app-uwsgi.ini.j2

###################
# System Packages #
###################

jc_packages:
  - nginx
  - uwsgi
  - uwsgi-plugin-python3
  - python3-pip
  - python3-virtualenv
  - python3-venv
  - python-certbot-nginx
  - virtualenvwrapper
  - git
  - gettext
  - fail2ban

#####################
# Database settings #
#####################

### First you need to define if you want to use a database or rather a plain sqlite file:
# jc_db_type: sqlite
jc_db_type: mariadb

# Set this to the user ansible is logging in as - should have root
# or sudo access
mysql_user_home: /root
mysql_user_name: root

# The default root user installed by mysql - almost always root
mysql_root_home: /root
mysql_root_username: root

# Set this to `true` to forcibly update the root password.
mysql_root_password_update: false
mysql_user_password_update: false

mysql_enabled_on_startup: true

# Whether my.cnf should be updated on every run.
overwrite_global_mycnf: true

# Define a custom list of packages to install; if none provided, the default
# package list from vars/[OS-family].yml will be used.
# mysql_packages:
#   - mariadb-server

# MySQL connection settings.
mysql_port: "3306"
mysql_bind_address: '0.0.0.0'
mysql_skip_name_resolve: false
mysql_datadir: /var/lib/mysql
mysql_sql_mode: ''
# The following variables have a default value depending on operating system.
# mysql_pid_file: /var/run/mysqld/mysqld.pid
# mysql_socket: /var/lib/mysql/mysql.sock

# Log file settings.
mysql_log_file_group: mysql

# Slow query log settings.
mysql_slow_query_log_enabled: false
mysql_slow_query_time: "2"
# The following variable has a default value depending on operating system.
# mysql_slow_query_log_file: /var/log/mysql-slow.log

# Memory settings (default values optimized ~512MB RAM).
mysql_key_buffer_size: "256M"
mysql_max_allowed_packet: "64M"
mysql_table_open_cache: "256"
mysql_sort_buffer_size: "1M"
mysql_read_buffer_size: "1M"
mysql_read_rnd_buffer_size: "4M"
mysql_myisam_sort_buffer_size: "64M"
mysql_thread_cache_size: "8"
mysql_query_cache_type: "0"
mysql_query_cache_size: "16M"
mysql_query_cache_limit: "1M"
mysql_max_connections: "1024"
mysql_tmp_table_size: "16M"
mysql_max_heap_table_size: "16M"
mysql_group_concat_max_len: "1024"
mysql_join_buffer_size: "262144"

# Other settings.
mysql_lower_case_table_names: "0"
mysql_wait_timeout: "28800"
mysql_event_scheduler_state: "OFF"

# InnoDB settings.
mysql_innodb_file_per_table: "1"
# Set .._buffer_pool_size up to 80% of RAM but beware of setting too high.
mysql_innodb_buffer_pool_size: "256M"
# Set .._log_file_size to 25% of buffer pool size.
mysql_innodb_log_file_size: "64M"
mysql_innodb_log_buffer_size: "8M"
mysql_innodb_flush_log_at_trx_commit: "1"
mysql_innodb_lock_wait_timeout: "50"

# These settings require MySQL > 5.5.
mysql_innodb_large_prefix: "1"
mysql_innodb_file_format: "barracuda"

# mysqldump settings.
mysql_mysqldump_max_allowed_packet: "64M"

# Logging settings.
mysql_log: ""
# The following variables have a default value depending on operating system.
# mysql_log_error: /var/log/mysql/mysql.err
# mysql_syslog_tag: mysql

mysql_config_include_files: []
#  - src: path/relative/to/playbook/file.cnf
#  - { src: path/relative/to/playbook/anotherfile.cnf, force: yes }

########################################
# Jesus Commandments Database Settings #
########################################

mysql_db_name: jcdatabase
mysql_db_collation: utf8_general_ci
mysql_db_encoding: utf8
mysql_db_state: present

mysql_user_jc_name: jcsystem
#mysql_user_jc_password: password
mysql_user_host: 127.0.0.1
mysql_user_priv: "jcdatabase.*:ALL"
mysql_user_state: present
#mysql_user_append_privs:
#mysql_user_encrypted:
