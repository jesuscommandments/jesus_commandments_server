---
- name: Create directories
  file:
    path: '{{ item }}'
    state: directory
    owner: '{{ app_user }}'
  with_items:
    - '{{ django_projects_directory }}'
    - '{{ django_projects_directory }}/{{ django_project_name }}'

- name: Create version directory
  file:
    path: '{{ django_projects_directory }}/{{ django_project_name }}/{{ app_version }}'
    state: directory
    owner: '{{ app_user }}'
  register: newversion

- name: Change recursively all permissions 
  file:
    dest: '{{ django_projects_directory }}/{{ django_project_name }}/{{ app_version }}'
    owner: '{{ app_user }}'
    group: '{{ app_group }}'
    mode: u=rwX,g=rwX,o=rX
    recurse: yes

- name: Clone git repository    
  become: true
  become_user: '{{ git_user }}'
  git:
    repo: '{{ git_repository }}'
    dest: '{{ git_project_path }}'
    clone: '{{ git_clone }}'
    update: '{{ git_update }}'
    force: '{{ git_force }}'
  notify:
    - reload uwsgi

- name: Deploy config
  template:
    src: 'settings.py.j2'
    dest: '{{ git_project_path }}/{{ django_project_title }}/{{ django_project_title }}/settings.py'
    owner: '{{ app_user }}'
    group: '{{ app_group }}'
  notify:
    - reload uwsgi

- name: Copy media files 
  copy:
    src: '{{ playbook_dir }}/group_vars/jesuscommandments/media'
    dest: '{{ git_project_path }}/{{ django_project_title }}'
    owner: '{{ app_user }}'
    group: '{{ app_group }}'
    mode: u=rw,g=rw,o=r
    directory_mode: yes

- name: Copy database from current version to new version
  copy:
    src: '{{ django_project_path }}/{{ django_project_title }}/db.sqlite3'
    dest: '{{ git_project_path }}/{{ django_project_title }}/db.sqlite3'
    remote_src: yes
    owner: '{{ app_user }}'
    group: '{{ app_group }}'
    mode: u=rw,g=rw,o=r
  when:
    - (newversion.changed) or (force_copy_database)
    - fill_database == false

- name: Install pip dependencies
  pip:
    name: uWSGI
    virtualenv: '{{ python_env }}'
    virtualenv_python: python3

- name: Change recursively all permissions 
  file:
    dest: '{{ django_projects_directory }}/{{ django_project_name }}/{{ app_version }}'
    owner: '{{ app_user }}'
    group: '{{ app_group }}'
    mode: u=rwX,g=rwX,o=rX
    recurse: yes

- name: Install requirements
  become: true
  become_user: '{{ app_user }}'
  shell: "bash install.sh"
  args:
    chdir: "{{ git_project_path }}/{{ django_project_title }}"
    executable: /bin/bash
  when:
    - install_requirements

- name: Update database
  become: true
  become_user: '{{ app_user }}'
  shell: "bash update_database.sh"
  args:
    chdir: "{{ git_project_path }}/{{ django_project_title }}"
    executable: /bin/bash
  when:
    - update_database

- name: Fill database
  become: true
  become_user: '{{ app_user }}'
  shell: "bash fill_database.sh"
  args:
    chdir: "{{ git_project_path }}/{{ django_project_title }}"
    executable: /bin/bash
  when:
    - fill_database

- name: Update translation files
  become: true
  become_user: '{{ app_user }}'
  shell: "bash update_translation_files.sh"
  args:
    chdir: "{{ git_project_path }}/{{ django_project_title }}"
    executable: /bin/bash
  when:
    - update_translation_files

- name: Auto translate files
  become: true
  become_user: '{{ app_user }}'
  shell: "bash auto_translate_files.sh"
  args:
    chdir: "{{ git_project_path }}/{{ django_project_title }}"
    executable: /bin/bash
  when:
    - auto_translate_files

- name: Point symlink to new version
  file:
    src: '{{ django_projects_directory }}/{{ django_project_name }}/{{ app_version }}'
    dest: '{{ django_projects_directory }}/{{ django_project_name }}/current'
    state: link
  notify: restart uwsgi
