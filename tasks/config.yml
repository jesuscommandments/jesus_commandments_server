---
- name: set fact for list
  set_fact: 
    list: "{{ item.username }}"
  with_items:
    - "{{ jc_developer_users }}"
  register: list_result

- name: make a userlist var
  set_fact: 
    userlist: "{{ list_result.results | map(attribute='ansible_facts.list') | list }}"

- name: Configure awstats
  lineinfile:
    dest: /etc/awstats/awstats.conf
    regexp: "^{{ item.property | regex_escape() }}="
    line: "{{ item.property }}={{ item.value }}"
  with_items:
    - { property: 'LogFile', value: "\"/var/log/nginx/access.log\"" }
    - { property: 'SiteDomain', value: "\"{{ jc_domain_names | first }}\"" }
    - { property: 'HostAliases', value: "\"localhost 127.0.0.1 {{ jc_domain_names | join (' ') }}\"" }
    - { property: 'AllowAccessFromWebToAuthenticatedUsersOnly', value: "\"{{ jc_awstats_auth_users_only }}\"" }
    - { property: 'AllowAccessFromWebToFollowingAuthenticatedUsers', value: "\"{{ userlist | join (' ') }}\"" }
    - { property: 'AllowAccessFromWebToFollowingIPAddresses', value: "\"{{ jc_developer_ips | join (' ') }}\"" }

- htpasswd:
    path: /etc/awstats/htpasswd.awstats
    name: "{{ item.username }}"
    password: "{{ item.password }}"
    owner: root
    group: www-data
    mode: 0640
  with_items:
    - "{{ jc_developer_users }}"

- name: Add cron job for awstats
  cron:
    name: Awstats user statistics
    job: "/usr/lib/cgi-bin/awstats.pl -config=/etc/awstats/awstats.conf -update -output > {{ jc_awstats_dir }}/index.html"
    minute: "0"
    hour: "*"
    user: "root"

- name: Configure main nginx config file
  become: true
  template:
    src: '{{ jc_nginx_main_template }}'
    dest: '/etc/nginx/nginx.conf'
  notify:
    - restart nginx

- name: Configure django nginx config file
  become: true
  template:
    src: '{{ jc_nginx_app_template }}'
    dest: '/etc/nginx/sites-available/{{ jc_project_config_name }}.conf'
  notify:
    - restart nginx

- name: Enable nginx app
  become: true
  file:
    src: '/etc/nginx/sites-available/{{ jc_project_config_name }}.conf'
    dest: '/etc/nginx/sites-enabled/{{ jc_project_config_name }}.conf'
    state: link
  notify:
    - restart nginx

- name: Create socket directory
  become: true
  file:
    path: '{{ jc_dir_uwsgi_socket }}'
    state: directory

- name: Configure uwsgi app
  become: true
  template:
      src: '{{ jc_uwsgi_app_template }}'
      dest: '/etc/uwsgi/apps-available/{{ jc_project_config_name }}.ini'
  notify:
    - restart uwsgi

- name: Enable uwsgi app
  become: true
  file:
      dest: '/etc/uwsgi/apps-enabled/{{ jc_project_config_name }}.ini'
      src: '/etc/uwsgi/apps-available/{{ jc_project_config_name }}.ini'
      state: link
  notify:
    - restart uwsgi

